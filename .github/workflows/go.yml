
on:
  push:
    branches: [ main ]
    paths-ignore:
      - '*.md'
     # - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '*.md'
     # - '.github/workflows/**'

jobs:
        
  # snyk:
    # name: snyk for vulns
    # runs-on: ubuntu-latest
    # steps:
      # - name: Checkout
        # uses: actions/checkout@v2
      
      # - name: Run Snyk to check configuration files for security issues
        # uses: snyk/actions/golang@master
        # env:
          # SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        # with:
          # args: --sarif-file-output=snyk.sarif        
      # - name: Upload result to GitHub Code Scanning
        # uses: github/codeql-action/upload-sarif@v1
        # if: always()
        # with:
          # sarif_file: snyk.sarif
          
      # - name: send massage to tg
        # if: always()
        # uses: appleboy/telegram-action@master
        # with:
          # to: ${{ secrets.TELEGRAM_TO }}
          # token: ${{ secrets.TELEGRAM_TOKEN }}
          # message: |
            # ${{ github.actor }} created commit:
            # Commit message: ${{ github.event.commits[0].message }}
            # Repository: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            # Result: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
          # #format: "markdown"
          # disable_web_page_preview: true
          
      # # - name: Send Gmail notification
        # # if: always()
        # # uses: dawidd6/action-send-mail@v3
        # # with:
            # # server_address: smtp.yandex.ru
            # # server_port: 465
            # # username: ${{secrets.YANDEX_MAIL_USERNAME}}
            # # password: ${{secrets.YANDEX_MAIL_PASSWORD}}
            # # subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
            # # to: ${{ secrets.MAIL_FOR_INFO }}
            # # from: github action ${{github.sha}} on ${{github.repository}}
            # # body: Build job of ${{github.repository}} completed successfully!
            # # attachments: snyk.sarif
  # tests:
    # needs: snyk
    # name: testing and building
    # runs-on: ubuntu-latest
    # steps:
    # - uses: actions/checkout@v2
    # - name: install go 
      # uses: actions/setup-go@v2
      # with:
        # go-version: 1.15.15
    # - name: building
      # run: go build -v ./...
    # - name: testing
      # run: go test -v ./...
    # - name: send massage to tg
      # if: always()
      # uses: appleboy/telegram-action@master
      # with:
          # to: ${{ secrets.TELEGRAM_TO }}
          # token: ${{ secrets.TELEGRAM_TOKEN }}
          # message: |
            # ${{ github.actor }} created commit:
            # Commit message: ${{ github.event.commits[0].message }}
            # Repository: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            # Result: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
          # #format: "markdown"
          # disable_web_page_preview: true
          
    # # - name: Send Gmail notification
      # # if: always()
      # # uses: dawidd6/action-send-mail@v3
      # # with:
            # # server_address: smtp.yandex.ru
            # # server_port: 465
            # # username: ${{secrets.YANDEX_MAIL_USERNAME}}
            # # password: ${{secrets.YANDEX_MAIL_PASSWORD}}
            # # subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
            # # to: ${{ secrets.MAIL_FOR_INFO }}
            # # from: github action ${{github.sha}} on ${{github.repository}}
            # # body: test job of ${{github.repository}} completed successfully!
            # # attachments: snyk.sarif  
  # golangci:
    # needs: tests
    # name: lint
    # runs-on: ubuntu-latest
    # steps:
      # - uses: actions/checkout@v2
      # - name: golangci-lint
        # uses: golangci/golangci-lint-action@v2
        # with:
          # # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          # version: latest

            
################## HERE CAN BE GOSEC CHECK ####################        
  
  deployecr:
    name: deploying aws ecr with terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: awsecr
    # needs: golangci
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
 
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform format
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform init
        run: terraform init
      
      - name: Terraform validate
        run: terraform validate
        continue-on-error: true

      - name: Terraform plan
        id: plan
        run: terraform plan
        continue-on-error: true

      - name: Terraform Apply
        run: terraform apply -auto-approve
        continue-on-error: true
        
      - name: send massage to tg
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            Repository: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            Result: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
          #format: "markdown"
          disable_web_page_preview: true  
        
      # - name: Send Gmail notification
        # if: always()
        # uses: dawidd6/action-send-mail@v3
        # with:
            # server_address: smtp.yandex.ru
            # server_port: 465
            # username: ${{secrets.YANDEX_MAIL_USERNAME}}
            # password: ${{secrets.YANDEX_MAIL_PASSWORD}}
            # subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
            # to: ${{ secrets.MAIL_FOR_INFO }}
            # from: github action ${{github.sha}} on ${{github.repository}}
            # body: test job of ${{github.repository}} completed successfully!
        
  deployaws:
    name: deploying aws with terraform 
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: awsdeploy
    needs: deployecr
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
 
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform format
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform init
        run: terraform init
        
      - name: Download task definition
        run: |
            aws ecs describe-task-definition --task-definition definitiontaskgobridge --query taskDefinition > task-definition.json  
     # - name: Terraform taint
     #   run: terraform taint
      
      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan
        continue-on-error: true

      # - name: Terraform Plan Status
        # if: steps.plan.outcome == 'failure'
        # run: exit 1

      - name: Terraform Apply
        run: terraform apply -auto-approve
        
      - name: send massage to tg
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            Repository: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            Result: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
          #format: "markdown"
          disable_web_page_preview: true  
        
      # - name: Send Gmail notification
        # if: always()
        # uses: dawidd6/action-send-mail@v3
        # with:
            # server_address: smtp.yandex.ru
            # server_port: 465
            # username: ${{secrets.YANDEX_MAIL_USERNAME}}
            # password: ${{secrets.YANDEX_MAIL_PASSWORD}}
            # subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
            # to: ${{ secrets.MAIL_FOR_INFO }}
            # from: github action ${{github.sha}} on ${{github.repository}}
            # body: test job of ${{github.repository}} completed successfully!

  pushtoecr:
    needs: deployaws
    name: start deploying to awc ecr
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: gorepo
          IMAGE_TAG: go-image-${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      # https://github.com/marketplace/actions/amazon-ecs-deploy-task-definition-action-for-github-actions
    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition definitiontaskgobridge --query taskDefinition > task-definition.json
    # ^^можно убрать и поменять в Render Task Definition image: 082046016299.dkr.ecr.eu-central-1.amazonaws.com/gorepo:latest  https://github.com/aws-actions/amazon-ecs-deploy-task-definition/pull/116
    # пойдем по тупому пути и service запустим через DAEMON вместо реплики
    # еще вариант снизить minimumHealthyPercent чтобы не второй таск не хватило паямти gjпоhttps://github.com/aws-actions/amazon-ecs-deploy-task-definition/issues/113#issuecomment-717465045 , но если перейдем на fargate то хер
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: go-container-ecr
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: go-service
        cluster: go-cluster
        wait-for-service-stability: true
        
    - name: send massage to tg
      if: always()
      uses: appleboy/telegram-action@master
      with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}
            Repository: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            Result: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
          #format: "markdown"
          disable_web_page_preview: true    
        
    # - name: Send Gmail notification
      # if: always()
      # uses: dawidd6/action-send-mail@v3
      # with:
            # server_address: smtp.yandex.ru
            # server_port: 465
            # username: ${{secrets.YANDEX_MAIL_USERNAME}}
            # password: ${{secrets.YANDEX_MAIL_PASSWORD}}
            # subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
            # to: ${{ secrets.MAIL_FOR_INFO }}
            # from: github action ${{github.sha}} on ${{github.repository}}
            # body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}

      

      
      
      
